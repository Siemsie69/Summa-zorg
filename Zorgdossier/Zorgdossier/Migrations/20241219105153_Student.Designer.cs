// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZorgDossier.Databases;

#nullable disable

namespace ZorgDossier.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241219105153_Student")]
    partial class Student
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ZorgDossier.Models.BasicInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Complaint")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("BasicInformation");
                });

            modelBuilder.Entity("ZorgDossier.Models.ComplaintsSymptoms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComplaintsSymptomsSummary")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("ComplaintsSymptoms");
                });

            modelBuilder.Entity("ZorgDossier.Models.ContactAdvice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Advice")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactAdviceText")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("ContactAdvice");
                });

            modelBuilder.Entity("ZorgDossier.Models.Dossier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneSummary")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("Phone");
                });

            modelBuilder.Entity("ZorgDossier.Models.Policy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PolicyChoice")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PolicyDate")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("PolicyTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("TriageCriteria")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("TEXT");

                    b.Property<string>("Urgency")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("Policy");
                });

            modelBuilder.Entity("ZorgDossier.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionSummary")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("Question");
                });

            modelBuilder.Entity("ZorgDossier.Models.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResearchSummary")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("Research");
                });

            modelBuilder.Entity("ZorgDossier.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ZorgDossier.Models.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DossierId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TreatmentSummary")
                        .IsRequired()
                        .HasMaxLength(720)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique();

                    b.ToTable("Treatment");
                });

            modelBuilder.Entity("ZorgDossier.Models.BasicInformation", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("BasicInformation")
                        .HasForeignKey("ZorgDossier.Models.BasicInformation", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.ComplaintsSymptoms", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("ComplaintsSymptoms")
                        .HasForeignKey("ZorgDossier.Models.ComplaintsSymptoms", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.ContactAdvice", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("ContactAdvice")
                        .HasForeignKey("ZorgDossier.Models.ContactAdvice", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Dossier", b =>
                {
                    b.HasOne("ZorgDossier.Models.Student", "Student")
                        .WithMany("Dossiers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ZorgDossier.Models.Phone", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("Phone")
                        .HasForeignKey("ZorgDossier.Models.Phone", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Policy", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("Policy")
                        .HasForeignKey("ZorgDossier.Models.Policy", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Question", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("Question")
                        .HasForeignKey("ZorgDossier.Models.Question", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Research", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("Research")
                        .HasForeignKey("ZorgDossier.Models.Research", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Treatment", b =>
                {
                    b.HasOne("ZorgDossier.Models.Dossier", "Dossier")
                        .WithOne("Treatment")
                        .HasForeignKey("ZorgDossier.Models.Treatment", "DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dossier");
                });

            modelBuilder.Entity("ZorgDossier.Models.Dossier", b =>
                {
                    b.Navigation("BasicInformation")
                        .IsRequired();

                    b.Navigation("ComplaintsSymptoms")
                        .IsRequired();

                    b.Navigation("ContactAdvice")
                        .IsRequired();

                    b.Navigation("Phone")
                        .IsRequired();

                    b.Navigation("Policy")
                        .IsRequired();

                    b.Navigation("Question")
                        .IsRequired();

                    b.Navigation("Research")
                        .IsRequired();

                    b.Navigation("Treatment")
                        .IsRequired();
                });

            modelBuilder.Entity("ZorgDossier.Models.Student", b =>
                {
                    b.Navigation("Dossiers");
                });
#pragma warning restore 612, 618
        }
    }
}
